{"entries":[{"timestamp":1728829344944,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":70,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n"],[-1,"\n//% color=\"#0BA000\" icon=\"\\uf017\"\nnamespace transitions {\n\n    export type TransitionProps = {\n        from: number;\n        to: number;\n        time: number;\n        easing: easing.EasingFunctions;\n        handler: (value: number, transition: Transition) => void;\n    }\n\n    //% block=\"$easing from $from to $to in $time seconds $value\"\n    //% handlerStatement=1\n    //% expandableArgumentMode=\"enabled\"\n    //% draggableParameters=\"reporter\"\n    //% to.defl=1 time.min=0 time.defl=1\n    //% easing.fieldEditor=\"gridpicker\"\n    //% easing.fieldOptions.width=220\n    //% easing.fieldOptions.columns=3\n    export function fromTo(from: number, to: number, time: number, easing: easing.EasingFunctions, handler: (value: number) => void) {\n        new Transition({\n            from, to, time, easing, handler\n        })\n    }\n\n    //% block=\"$easing from $from to $to in $time seconds $value $transition\"\n    //% advanced=true\n    //% handlerStatement=1\n    //% expandableArgumentMode=\"enabled\"\n    //% draggableParameters=\"reporter\"\n    //% to.defl=1 time.min=0 time.defl=1\n    //% easing.fieldEditor=\"gridpicker\"\n    //% easing.fieldOptions.width=220\n    //% easing.fieldOptions.columns=3\n    export function fromToWithRef(from: number, to: number, time: number, easing: easing.EasingFunctions, handler: (value: number, transition: Transition) => void) {\n        new Transition({\n            from, to, time, easing, handler\n        })\n    }\n\n    export class Transition {\n        _props: TransitionProps;\n        _frameDuration = 20;\n        _totalFrames = 0;\n        _currentFrame = 0;\n        _currentValue = 0;\n        _running = false;\n        _progress = 0;\n        _range = 0;\n        _easingFn: easing.EasingFunction = easing.linear;;\n\n        constructor(props: TransitionProps) {\n            this._props = props;\n            this._totalFrames = this._props.time * 1000 / this._frameDuration;\n            this._range = this._props.to - this._props.from;\n            this._easingFn = easing.easingFunctionMap[this._props.easing] || this._easingFn;\n            this.play();\n        }\n\n        play() {\n            this._running = true;\n            this._currentValue = this._props.from;\n            this._progress = 0;\n            for (this._currentFrame = 0; this._currentFrame <= this._totalFrames; this._currentFrame++) {\n                // Last frame should be the exact value provided\n                if (this._currentFrame === this._totalFrames)\n                    this._currentValue = this._props.to;\n                // Callback function\n                this._props.handler(this._currentValue, this);\n                // Pause\n                basic.pause(this._frameDuration);\n                // Calc next frame\n                this._progress = this._currentFrame / this._totalFrames;\n                this._currentValue = this._easingFn(this._progress) * this._range + this._props.from;\n                if (!this._running) break;\n            }\n        }\n\n        //% block=\"stop $this\"\n        //% advanced=true\n        //% this.defl=transition\n        //% this.shadow=variables_get\n        stop() {\n            this._running = false;\n        }\n\n        //% block=\"$this current frame\"\n        //% advanced=true\n        //% this.defl=transition\n        //% this.shadow=variables_get\n        get frame() {\n            return this._currentFrame;\n        }\n\n        //% block=\"$this total frames\"\n        //% advanced=true\n        //% this.defl=transition\n        //% this.shadow=variables_get\n        get total() {\n            return this._totalFrames;\n        }\n    }\n}\n\n\nnamespace easing {\n\n    export type EasingFunction = (t: number) => number;\n\n    export enum EasingFunctions {\n        //% block=\"linear\"\n        Linear,\n        //% block=\"ease in\"\n        EaseIn,\n        //% block=\"ease out\"\n        EaseOut,\n        //% block=\"ease in out\"\n        EaseInOut\n    }\n\n\n    export const easingFunctionMap = {\n        [EasingFunctions.Linear]: easing.linear,\n        [EasingFunctions.EaseIn]: easing.easeInCubic,\n        [EasingFunctions.EaseOut]: easing.easeOutCubic,\n        [EasingFunctions.EaseInOut]: easing.easeInOutCubic,\n    };\n\n    // Based on https://gist.github.com/gre/1650294\n\n    // No easing, no acceleration\n    export function linear(t: number) {\n        return t;\n    }\n\n    // Slight acceleration from zero to full speed\n    export function easeInSine(t: number) {\n        return -1 * Math.cos(t * (Math.PI / 2)) + 1;\n    }\n\n    // Slight deceleration at the end\n    export function easeOutSine(t: number) {\n        return Math.sin(t * (Math.PI / 2));\n    }\n\n    // Slight acceleration at beginning and slight deceleration at end\n    export function easeInOutSine(t: number) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1);\n    }\n\n    // Accelerating from zero velocity\n    export function easeInQuad(t: number) {\n        return t * t;\n    }\n\n    // Decelerating to zero velocity\n    export function easeOutQuad(t: number) {\n        return t * (2 - t);\n    }\n\n    // Acceleration until halfway, then deceleration\n    export function easeInOutQuad(t: number) {\n        return t < 0.5 ? 2 * t * t : - 1 + (4 - 2 * t) * t;\n    }\n\n    // Accelerating from zero velocity\n    export function easeInCubic(t: number) {\n        return t * t * t;\n    }\n\n    // Decelerating to zero velocity\n    export function easeOutCubic(t: number) {\n        const t1 = t - 1;\n        return t1 * t1 * t1 + 1;\n    }\n\n    // Acceleration until halfway, then deceleration\n    export function easeInOutCubic(t: number) {\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    }\n\n    // Accelerating from zero velocity\n    export function easeInQuart(t: number) {\n        return t * t * t * t;\n    }\n\n    // Decelerating to zero velocity\n    export function easeOutQuart(t: number) {\n        const t1 = t - 1;\n        return 1 - t1 * t1 * t1 * t1;\n    }\n\n    // Acceleration until halfway, then deceleration\n    export function easeInOutQuart(t: number) {\n        const t1 = t - 1;\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1;\n    }\n\n    // Accelerating from zero velocity\n    export function easeInQuint(t: number) {\n        return t * t * t * t * t;\n    }\n\n    // Decelerating to zero velocity\n    export function easeOutQuint(t: number) {\n        const t1 = t - 1;\n        return 1 + t1 * t1 * t1 * t1 * t1;\n    }\n\n    // Acceleration until halfway, then deceleration\n    export function easeInOutQuint(t: number) {\n        const t1 = t - 1;\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1;\n    }\n\n    // Accelerate exponentially until finish\n    export function easeInExpo(t: number) {\n        if (t === 0) {\n            return 0;\n        }\n\n        return Math.pow(2, 10 * (t - 1));\n    }\n\n    // Initial exponential acceleration slowing to stop\n    export function easeOutExpo(t: number) {\n        if (t === 1) {\n            return 1;\n        }\n\n        return (-Math.pow(2, -10 * t) + 1);\n    }\n\n    // Exponential acceleration and deceleration\n    export function easeInOutExpo(t: number) {\n        if (t === 0 || t === 1) {\n            return t;\n        }\n\n        const scaledTime = t * 2;\n        const scaledTime1 = scaledTime - 1;\n\n        if (scaledTime < 1) {\n            return 0.5 * Math.pow(2, 10 * (scaledTime1));\n        }\n\n        return 0.5 * (-Math.pow(2, -10 * scaledTime1) + 2);\n    }\n\n    // Increasing velocity until stop\n    export function easeInCirc(t: number) {\n        const scaledTime = t / 1;\n        return -1 * (Math.sqrt(1 - scaledTime * t) - 1);\n    }\n\n    // Start fast, decreasing velocity until stop\n    export function easeOutCirc(t: number) {\n        const t1 = t - 1;\n        return Math.sqrt(1 - t1 * t1);\n    }\n\n    // Fast increase in velocity, fast decrease in velocity\n    export function easeInOutCirc(t: number) {\n        const scaledTime = t * 2;\n        const scaledTime1 = scaledTime - 2;\n\n        if (scaledTime < 1) {\n            return -0.5 * (Math.sqrt(1 - scaledTime * scaledTime) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - scaledTime1 * scaledTime1) + 1);\n    }\n\n\n    // Bounce to completion\n    export function easeOutBounce(t: number) {\n        const scaledTime = t / 1;\n        if (scaledTime < (1 / 2.75)) {\n            return 7.5625 * scaledTime * scaledTime;\n        } else if (scaledTime < (2 / 2.75)) {\n            const scaledTime2 = scaledTime - (1.5 / 2.75);\n            return (7.5625 * scaledTime2 * scaledTime2) + 0.75;\n        } else if (scaledTime < (2.5 / 2.75)) {\n            const scaledTime2 = scaledTime - (2.25 / 2.75);\n            return (7.5625 * scaledTime2 * scaledTime2) + 0.9375;\n        } else {\n            const scaledTime2 = scaledTime - (2.625 / 2.75);\n            return (7.5625 * scaledTime2 * scaledTime2) + 0.984375;\n        }\n    }\n\n    // Bounce increasing in velocity until completion\n    export function easeInBounce(t: number) {\n        return 1 - easeOutBounce(1 - t);\n    }\n\n    // Bounce in and bounce out\n    export function easeInOutBounce(t: number) {\n        if (t < 0.5) {\n\n            return easeInBounce(t * 2) * 0.5;\n\n        }\n        return (easeOutBounce((t * 2) - 1) * 0.5) + 0.5;\n    }\n\n    //#region unsupported\n\n    // // Slow movement backwards then fast snap to finish\n    // export function easeInBack(t: number, magnitude = 1.70158) {\n\n    //     return t * t * ((magnitude + 1) * t - magnitude);\n\n    // }\n\n    // // Fast snap to backwards point then slow resolve to finish\n    // export function easeOutBack(t: number, magnitude = 1.70158) {\n\n    //     const scaledTime = (t / 1) - 1;\n\n    //     return (\n    //         scaledTime * scaledTime * ((magnitude + 1) * scaledTime + magnitude)\n    //     ) + 1;\n\n    // }\n\n    // // Slow movement backwards, fast snap to past finish, slow resolve to finish\n    // export function easeInOutBack(t: number, magnitude = 1.70158) {\n\n    //     const scaledTime = t * 2;\n    //     const scaledTime2 = scaledTime - 2;\n\n    //     const s = magnitude * 1.525;\n\n    //     if (scaledTime < 1) {\n\n    //         return 0.5 * scaledTime * scaledTime * (\n    //             ((s + 1) * scaledTime) - s\n    //         );\n\n    //     }\n\n    //     return 0.5 * (\n    //         scaledTime2 * scaledTime2 * ((s + 1) * scaledTime2 + s) + 2\n    //     );\n\n    // }\n    // // Bounces slowly then quickly to finish\n    // export function easeInElastic(t: number, magnitude = 0.7) {\n\n    //     if (t === 0 || t === 1) {\n    //         return t;\n    //     }\n\n    //     const scaledTime = t / 1;\n    //     const scaledTime1 = scaledTime - 1;\n\n    //     const p = 1 - magnitude;\n    //     const s = p / (2 * Math.PI) * Math.asin(1);\n\n    //     return -(\n    //         Math.pow(2, 10 * scaledTime1) *\n    //         Math.sin((scaledTime1 - s) * (2 * Math.PI) / p)\n    //     );\n\n    // }\n\n    // // Fast acceleration, bounces to zero\n    // export function easeOutElastic(t: number, magnitude = 0.7) {\n\n    //     if (t === 0 || t === 1) {\n    //         return t;\n    //     }\n\n    //     const p = 1 - magnitude;\n    //     const scaledTime = t * 2;\n\n    //     const s = p / (2 * Math.PI) * Math.asin(1);\n    //     return (\n    //         Math.pow(2, -10 * scaledTime) *\n    //         Math.sin((scaledTime - s) * (2 * Math.PI) / p)\n    //     ) + 1;\n\n    // }\n\n    // // Slow start and end, two bounces sandwich a fast motion\n    // export function easeInOutElastic(t: number, magnitude = 0.65) {\n\n    //     if (t === 0 || t === 1) {\n    //         return t;\n    //     }\n\n    //     const p = 1 - magnitude;\n    //     const scaledTime = t * 2;\n    //     const scaledTime1 = scaledTime - 1;\n\n    //     const s = p / (2 * Math.PI) * Math.asin(1);\n\n    //     if (scaledTime < 1) {\n    //         return -0.5 * (\n    //             Math.pow(2, 10 * scaledTime1) *\n    //             Math.sin((scaledTime1 - s) * (2 * Math.PI) / p)\n    //         );\n    //     }\n\n    //     return (\n    //         Math.pow(2, -10 * scaledTime1) *\n    //         Math.sin((scaledTime1 - s) * (2 * Math.PI) / p) * 0.5\n    //     ) + 1;\n\n    // }\n\n    //#endregion unsuported\n\n}"]],"start1":0,"start2":0,"length1":12136,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"test.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":226,"start2":226,"length1":108,"length2":44}]},{"type":"added","filename":"test.ts","value":"transitions.fromToWithRef(0, 1, 1, easing.EasingFunctions.EaseIn, function (value, transition) {\n    if (transition.frame > 10) {\n        transition.stop()\n    }\n})\n\nbasic.forever(function () {\n    transitions.fromTo(0, 1024, 3, easing.EasingFunctions.EaseInOut, function (value) {\n        pins.analogWritePin(AnalogPin.P0, value)\n    })\n    transitions.fromTo(1024, 0, 3, easing.EasingFunctions.EaseInOut, function (value) {\n        pins.analogWritePin(AnalogPin.P0, value)\n    })\n})\n"}]}],"snapshots":[{"timestamp":1728829344943,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-transitions\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1728829485101}